{"name":"Toggle Darkness","permission":{"default":0,"8ctQnD05Ya4EzDo0":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""}},"scope":"global","command":"const key = \"sticky-templates\";\nconst namespace = \"token-mold\";\nconst templateName = \"darkness\";\nconst owningPlayerName = \"Thomas\";\n\nasync function createSticky() {\n    const gridSize = game.scenes.active.data.grid;\n    const owner = game.users.getName(owningPlayerName);\n    const template = await MeasuredTemplate.create({\n        angle: null,\n        distance: 15,\n        direction: 0,\n        borderColor: \"#000000\",\n        fillColor: \"#000000\",\n        rotate: false,\n        user: owner._id,\n        t: \"circle\",\n        texture: \"\",\n        x: token.data.x + gridSize / 2,\n        y: token.data.y + gridSize / 2\n    });\n\n    template.setFlag(namespace, key, {\n        tokenId: token.id,\n        rotate: false,\n        name: templateName\n    });\n\n    token.setFlag(namespace, key, {\n        templateIds: [template.id]\n    });\n}\n\nfunction getStickyTemplates(token, name) {\n    const sticky = token.getFlag(namespace, key);\n    if (!sticky || !sticky.templateIds)\n        return [];\n\n    return canvas.templates.objects.children.filter(template => {\n        let isSticky = sticky.templateIds.some(id => id === template.id)\n        let stickyData = template.getFlag(namespace, key);\n\n        return isSticky && stickyData && stickyData.name === name;\n    });\n}\n\nconst token = canvas.tokens.controlled[0];\nif (!token) {\n  ui.notifications.error(\"Please select your token!\");\n}\nelse {\n  let relatedStickies = getStickyTemplates(token, templateName);\n  if (relatedStickies.length === 0) {\n      let actor = token.actor;\n      let darkness = actor.items.find(item => item.name === \"Darkness\" && item.type === \"spell\");\n      actor.useSpell(darkness).then(createSticky);\n  } else {\n      relatedStickies.map(s => s.delete());\n      game.cub.removeCondition(\"Concentrating\", canvas.tokens.controlled);\n  }\n}","author":"8ctQnD05Ya4EzDo0","img":"Assets/Skills/assassin/DarkEscape.jpg","actorIds":[],"_id":"BJML21Ei6zVqqsbN"}
{"name":"Toggle Rage","permission":{"default":0,"8ctQnD05Ya4EzDo0":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""}},"scope":"global","command":"DynamicEffects.togglePassive(\"Rage\", \"feat\");","author":"8ctQnD05Ya4EzDo0","img":"systems/dnd5e/icons/skills/red_10.jpg","actorIds":[],"_id":"yEXLmfdF7E3qIhJj"}
{"name":"Toggle Hunter's Mark","permission":{"default":0,"8ctQnD05Ya4EzDo0":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""}},"scope":"global","command":"if (canvas.tokens.controlled.length === 0){\n  ui.notifications.error(\"Hunter's Mark can only be toggled when a token is selected.\");\n}\nelse {\n  DynamicEffects.togglePassive(\"Hunter's Mark\", \"spell\");\n}","author":"8ctQnD05Ya4EzDo0","img":"Assets/Skills/ranger/poisontipsignet.jpg","actorIds":[],"_id":"YcGQ4bqDAP2J06W8"}
{"name":"Toggle Night","permission":{"default":0,"8ctQnD05Ya4EzDo0":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""}},"scope":"global","command":"const darknessThreshold = 0.3;\n\nvar scene = game.scenes.entities.find(({data}) => data.active);\nvar isDay = scene.data.darkness < darknessThreshold;\n\nvar night = { darkness: darknessThreshold, globalLight: false };\nvar day = { darkness: 0, globalLight: true };\n\nscene.update(isDay ? night : day);\n\nvar message = isDay\n  ? `The night is dark and full of terrors.`\n  : `Wakey Wakey, day breaky!`;\n\nui.notifications.notify(message);\n","author":"8ctQnD05Ya4EzDo0","img":"icons/svg/sleep.svg","actorIds":[],"_id":"uUeve50E25JuNYTG"}
{"name":"Toggle Torch","permission":{"default":0,"8ctQnD05Ya4EzDo0":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""}},"scope":"global","command":"if (token.data.brightLight > 0) {\n  token.update({brightLight: 0, dimLight: 0})\n    .then(() => ui.notifications.info(\"Torch toggled off.\"));\n}\nelse {\n  token.update({brightLight: 20, dimLight: 40})\n    .then(() => ui.notifications.info(\"Torch toggled on.\"));\n}","author":"8ctQnD05Ya4EzDo0","img":"systems/dnd5e/icons/items/inventory/torch.jpg","actorIds":[],"_id":"u7j7QSKayARXFe1P"}
